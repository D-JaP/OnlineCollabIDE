{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dzung\\\\project\\\\cloudy\\\\client\\\\cloudy_ide\\\\src\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { css } from '@codemirror/lang-css';\nimport { html } from '@codemirror/lang-html';\nimport * as Y from 'yjs';\nimport { EditorState } from \"@codemirror/state\";\nimport { EditorView, keymap } from \"@codemirror/view\";\nimport { basicSetup } from 'codemirror';\nimport { githubLight } from '@ddietr/codemirror-themes/github-light';\nimport { githubDark } from '@ddietr/codemirror-themes/github-dark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor(props) {\n  _s();\n  const editorRef = useRef(null);\n  var lang;\n  var theme;\n  if (props.lang == \"javascript\") {\n    lang = javascript();\n  } else if (props.lang == \"html\") {\n    lang = html();\n  } else if (props.lang == \"css\") {\n    lang = css();\n  }\n  if (props.theme == 'light') {\n    theme = githubLight;\n  } else if (props.theme == 'dark') {\n    theme = githubDark;\n  }\n\n  // \n  const parentElement = document.getElementById(\"editor-container\");\n  const state = EditorState.create({\n    doc: \"Hello, world!\",\n    extensions: [basicSetup, lang, theme]\n  });\n  const view = new EditorView({\n    state,\n    parent: parentElement\n  });\n  editorRef.current = view;\n\n  // const handleChange = () => {\n  //     const value = editorRef.current.state.doc.toString();\n  //     console.log(\"Editor content:\", value);\n  //     // update the state of your React component here\n  // };\n  useEffect(() => {\n    console.log(view.state.doc);\n  }, [view.state.doc]);\n\n  // useEffect(() => {\n  //     editorRef.current.setProps({\n  //         dispatchTransaction(transaction) {\n  //             editorRef.current.update([transaction]);\n  //             handleChange();\n  //         }\n  //     });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n_s(CodeEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","javascript","css","html","Y","EditorState","EditorView","keymap","basicSetup","githubLight","githubDark","jsxDEV","_jsxDEV","CodeEditor","props","_s","editorRef","lang","theme","parentElement","document","getElementById","state","create","doc","extensions","view","parent","current","console","log","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dzung/project/cloudy/client/cloudy_ide/src/CodeEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport { javascript } from '@codemirror/lang-javascript';\r\nimport { css } from '@codemirror/lang-css'\r\nimport { html } from '@codemirror/lang-html'\r\nimport * as Y from 'yjs'\r\nimport {EditorState} from \"@codemirror/state\"\r\nimport {EditorView, keymap} from \"@codemirror/view\"\r\nimport { basicSetup } from 'codemirror';\r\nimport {githubLight} from '@ddietr/codemirror-themes/github-light'\r\nimport {githubDark} from '@ddietr/codemirror-themes/github-dark'\r\n\r\n\r\nfunction CodeEditor(props) {\r\n    const editorRef = useRef(null);\r\n    var lang ;\r\n    var theme ;\r\n    if (props.lang == \"javascript\") {\r\n        lang = javascript();\r\n    }\r\n    else if (props.lang == \"html\") {\r\n        lang = html();\r\n    }\r\n    else if (props.lang == \"css\") {\r\n        lang = css();\r\n    }\r\n\r\n    if (props.theme == 'light'){\r\n        theme = githubLight;\r\n    }\r\n    else if (props.theme == 'dark') {\r\n        theme = githubDark;\r\n    }\r\n\r\n    // \r\n    const parentElement = document.getElementById(\"editor-container\");\r\n\r\n    const state = EditorState.create({\r\n        doc: \"Hello, world!\",\r\n        extensions: [basicSetup,lang,theme]\r\n    });\r\n\r\n    const view = new EditorView({\r\n        state,\r\n        parent: parentElement,\r\n    });\r\n\r\n    editorRef.current = view;\r\n    \r\n    // const handleChange = () => {\r\n    //     const value = editorRef.current.state.doc.toString();\r\n    //     console.log(\"Editor content:\", value);\r\n    //     // update the state of your React component here\r\n    // };\r\n    useEffect(() => {\r\n      console.log(view.state.doc)\r\n    \r\n    }, [view.state.doc])\r\n    \r\n\r\n    // useEffect(() => {\r\n    //     editorRef.current.setProps({\r\n    //         dispatchTransaction(transaction) {\r\n    //             editorRef.current.update([transaction]);\r\n    //             handleChange();\r\n    //         }\r\n    //     });\r\n    // }, []);\r\n\r\n    return <div id=\"editor-container\" />;\r\n\r\n}\r\n\r\nexport default CodeEditor"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,OAAO,KAAKC,CAAC,MAAM,KAAK;AACxB,SAAQC,WAAW,QAAO,mBAAmB;AAC7C,SAAQC,UAAU,EAAEC,MAAM,QAAO,kBAAkB;AACnD,SAASC,UAAU,QAAQ,YAAY;AACvC,SAAQC,WAAW,QAAO,wCAAwC;AAClE,SAAQC,UAAU,QAAO,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhE,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAIkB,IAAI;EACR,IAAIC,KAAK;EACT,IAAIJ,KAAK,CAACG,IAAI,IAAI,YAAY,EAAE;IAC5BA,IAAI,GAAGhB,UAAU,EAAE;EACvB,CAAC,MACI,IAAIa,KAAK,CAACG,IAAI,IAAI,MAAM,EAAE;IAC3BA,IAAI,GAAGd,IAAI,EAAE;EACjB,CAAC,MACI,IAAIW,KAAK,CAACG,IAAI,IAAI,KAAK,EAAE;IAC1BA,IAAI,GAAGf,GAAG,EAAE;EAChB;EAEA,IAAIY,KAAK,CAACI,KAAK,IAAI,OAAO,EAAC;IACvBA,KAAK,GAAGT,WAAW;EACvB,CAAC,MACI,IAAIK,KAAK,CAACI,KAAK,IAAI,MAAM,EAAE;IAC5BA,KAAK,GAAGR,UAAU;EACtB;;EAEA;EACA,MAAMS,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;EAEjE,MAAMC,KAAK,GAAGjB,WAAW,CAACkB,MAAM,CAAC;IAC7BC,GAAG,EAAE,eAAe;IACpBC,UAAU,EAAE,CAACjB,UAAU,EAACS,IAAI,EAACC,KAAK;EACtC,CAAC,CAAC;EAEF,MAAMQ,IAAI,GAAG,IAAIpB,UAAU,CAAC;IACxBgB,KAAK;IACLK,MAAM,EAAER;EACZ,CAAC,CAAC;EAEFH,SAAS,CAACY,OAAO,GAAGF,IAAI;;EAExB;EACA;EACA;EACA;EACA;EACA1B,SAAS,CAAC,MAAM;IACd6B,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACJ,KAAK,CAACE,GAAG,CAAC;EAE7B,CAAC,EAAE,CAACE,IAAI,CAACJ,KAAK,CAACE,GAAG,CAAC,CAAC;;EAGpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAOZ,OAAA;IAAKmB,EAAE,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAExC;AAACpB,EAAA,CA1DQF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA4DnB,eAAeA,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}