{"ast":null,"code":"import * as Y from 'yjs'; // eslint-disable-line\nimport * as cmState from '@codemirror/state';\nimport * as cmView from '@codemirror/view';\nimport { ySyncFacet, ySyncAnnotation } from './y-sync.js';\nimport { YRange } from './y-range.js'; // eslint-disable-line\nimport { createMutex } from 'lib0/mutex';\nexport class YUndoManagerConfig {\n  /**\n   * @param {Y.UndoManager} undoManager\n   */\n  constructor(undoManager) {\n    this.undoManager = undoManager;\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin(origin) {\n    this.undoManager.addTrackedOrigin(origin);\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin(origin) {\n    this.undoManager.removeTrackedOrigin(origin);\n  }\n\n  /**\n   * @return {boolean} Whether a change was undone.\n   */\n  undo() {\n    return this.undoManager.undo() != null;\n  }\n\n  /**\n   * @return {boolean} Whether a change was redone.\n   */\n  redo() {\n    return this.undoManager.redo() != null;\n  }\n}\n\n/**\n * @type {cmState.Facet<YUndoManagerConfig, YUndoManagerConfig>}\n */\nexport const yUndoManagerFacet = cmState.Facet.define({\n  combine(inputs) {\n    return inputs[inputs.length - 1];\n  }\n});\n\n/**\n * @type {cmState.AnnotationType<YUndoManagerConfig>}\n */\nexport const yUndoManagerAnnotation = cmState.Annotation.define();\n\n/**\n * @extends {PluginValue}\n */\nclass YUndoManagerPluginValue {\n  /**\n   * @param {cmView.EditorView} view\n   */\n  constructor(view) {\n    this.view = view;\n    this.conf = view.state.facet(yUndoManagerFacet);\n    this._undoManager = this.conf.undoManager;\n    this.syncConf = view.state.facet(ySyncFacet);\n    /**\n     * @type {null | YRange}\n     */\n    this._beforeChangeSelection = null;\n    this._mux = createMutex();\n    this._onStackItemAdded = _ref => {\n      let {\n        stackItem,\n        changedParentTypes\n      } = _ref;\n      // only store metadata if this type was affected\n      if (changedParentTypes.has(this.syncConf.ytext) && this._beforeChangeSelection && !stackItem.meta.has(this)) {\n        // do not overwrite previous stored selection\n        stackItem.meta.set(this, this._beforeChangeSelection);\n      }\n    };\n    this._onStackItemPopped = _ref2 => {\n      let {\n        stackItem\n      } = _ref2;\n      const sel = stackItem.meta.get(this);\n      if (sel) {\n        const selection = this.syncConf.fromYRange(sel);\n        view.dispatch(view.state.update({\n          selection\n        }));\n        this._storeSelection();\n      }\n    };\n    /**\n     * Do this without mutex, simply use the sync annotation\n     */\n    this._storeSelection = () => {\n      // store the selection before the change is applied so we can restore it with the undo manager.\n      this._beforeChangeSelection = this.syncConf.toYRange(this.view.state.selection.main);\n    };\n    this._undoManager.on('stack-item-added', this._onStackItemAdded);\n    this._undoManager.on('stack-item-popped', this._onStackItemPopped);\n    this._undoManager.addTrackedOrigin(this.syncConf);\n  }\n\n  /**\n   * @param {cmView.ViewUpdate} update\n   */\n  update(update) {\n    if (update.selectionSet && (update.transactions.length === 0 || update.transactions[0].annotation(ySyncAnnotation) !== this.syncConf)) {\n      // This only works when YUndoManagerPlugin is included before the sync plugin\n      this._storeSelection();\n    }\n  }\n  destroy() {\n    this._undoManager.off('stack-item-added', this._onStackItemAdded);\n    this._undoManager.off('stack-item-popped', this._onStackItemPopped);\n    this._undoManager.removeTrackedOrigin(this.syncConf);\n  }\n}\nexport const yUndoManager = cmView.ViewPlugin.fromClass(YUndoManagerPluginValue);\n\n/**\n * @type {cmState.StateCommand}\n */\nexport const undo = _ref3 => {\n  let {\n    state,\n    dispatch\n  } = _ref3;\n  return state.facet(yUndoManagerFacet).undo() || true;\n};\n\n/**\n * @type {cmState.StateCommand}\n */\nexport const redo = _ref4 => {\n  let {\n    state,\n    dispatch\n  } = _ref4;\n  return state.facet(yUndoManagerFacet).redo() || true;\n};\n\n/**\n * @param {cmState.EditorState} state\n * @return {number}\n */\nexport const undoDepth = state => state.facet(yUndoManagerFacet).undoManager.undoStack.length;\n\n/**\n * @param {cmState.EditorState} state\n * @return {number}\n */\nexport const redoDepth = state => state.facet(yUndoManagerFacet).undoManager.redoStack.length;\n\n/**\n * Default key bindigs for the undo manager.\n * @type {Array<cmView.KeyBinding>}\n */\nexport const yUndoManagerKeymap = [{\n  key: 'Mod-z',\n  run: undo,\n  preventDefault: true\n}, {\n  key: 'Mod-y',\n  mac: 'Mod-Shift-z',\n  run: redo,\n  preventDefault: true\n}, {\n  key: 'Mod-Shift-z',\n  run: redo,\n  preventDefault: true\n}];","map":{"version":3,"names":["Y","cmState","cmView","ySyncFacet","ySyncAnnotation","YRange","createMutex","YUndoManagerConfig","constructor","undoManager","addTrackedOrigin","origin","removeTrackedOrigin","undo","redo","yUndoManagerFacet","Facet","define","combine","inputs","length","yUndoManagerAnnotation","Annotation","YUndoManagerPluginValue","view","conf","state","facet","_undoManager","syncConf","_beforeChangeSelection","_mux","_onStackItemAdded","_ref","stackItem","changedParentTypes","has","ytext","meta","set","_onStackItemPopped","_ref2","sel","get","selection","fromYRange","dispatch","update","_storeSelection","toYRange","main","on","selectionSet","transactions","annotation","destroy","off","yUndoManager","ViewPlugin","fromClass","_ref3","_ref4","undoDepth","undoStack","redoDepth","redoStack","yUndoManagerKeymap","key","run","preventDefault","mac"],"sources":["C:/Users/dzung/project/cloudy/client/cloudy_ide/node_modules/y-codemirror.next/src/y-undomanager.js"],"sourcesContent":["import * as Y from 'yjs' // eslint-disable-line\nimport * as cmState from '@codemirror/state'\n\nimport * as cmView from '@codemirror/view'\nimport { ySyncFacet, ySyncAnnotation } from './y-sync.js'\nimport { YRange } from './y-range.js' // eslint-disable-line\nimport { createMutex } from 'lib0/mutex'\n\nexport class YUndoManagerConfig {\n  /**\n   * @param {Y.UndoManager} undoManager\n   */\n  constructor (undoManager) {\n    this.undoManager = undoManager\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.undoManager.addTrackedOrigin(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.undoManager.removeTrackedOrigin(origin)\n  }\n\n  /**\n   * @return {boolean} Whether a change was undone.\n   */\n  undo () {\n    return this.undoManager.undo() != null\n  }\n\n  /**\n   * @return {boolean} Whether a change was redone.\n   */\n  redo () {\n    return this.undoManager.redo() != null\n  }\n}\n\n/**\n * @type {cmState.Facet<YUndoManagerConfig, YUndoManagerConfig>}\n */\nexport const yUndoManagerFacet = cmState.Facet.define({\n  combine (inputs) {\n    return inputs[inputs.length - 1]\n  }\n})\n\n/**\n * @type {cmState.AnnotationType<YUndoManagerConfig>}\n */\nexport const yUndoManagerAnnotation = cmState.Annotation.define()\n\n/**\n * @extends {PluginValue}\n */\nclass YUndoManagerPluginValue {\n  /**\n   * @param {cmView.EditorView} view\n   */\n  constructor (view) {\n    this.view = view\n    this.conf = view.state.facet(yUndoManagerFacet)\n    this._undoManager = this.conf.undoManager\n    this.syncConf = view.state.facet(ySyncFacet)\n    /**\n     * @type {null | YRange}\n     */\n    this._beforeChangeSelection = null\n    this._mux = createMutex()\n\n    this._onStackItemAdded = ({ stackItem, changedParentTypes }) => {\n      // only store metadata if this type was affected\n      if (changedParentTypes.has(this.syncConf.ytext) && this._beforeChangeSelection && !stackItem.meta.has(this)) { // do not overwrite previous stored selection\n        stackItem.meta.set(this, this._beforeChangeSelection)\n      }\n    }\n    this._onStackItemPopped = ({ stackItem }) => {\n      const sel = stackItem.meta.get(this)\n      if (sel) {\n        const selection = this.syncConf.fromYRange(sel)\n        view.dispatch(view.state.update({ selection }))\n        this._storeSelection()\n      }\n    }\n    /**\n     * Do this without mutex, simply use the sync annotation\n     */\n    this._storeSelection = () => {\n      // store the selection before the change is applied so we can restore it with the undo manager.\n      this._beforeChangeSelection = this.syncConf.toYRange(this.view.state.selection.main)\n    }\n    this._undoManager.on('stack-item-added', this._onStackItemAdded)\n    this._undoManager.on('stack-item-popped', this._onStackItemPopped)\n    this._undoManager.addTrackedOrigin(this.syncConf)\n  }\n\n  /**\n   * @param {cmView.ViewUpdate} update\n   */\n  update (update) {\n    if (update.selectionSet && (update.transactions.length === 0 || update.transactions[0].annotation(ySyncAnnotation) !== this.syncConf)) {\n      // This only works when YUndoManagerPlugin is included before the sync plugin\n      this._storeSelection()\n    }\n  }\n\n  destroy () {\n    this._undoManager.off('stack-item-added', this._onStackItemAdded)\n    this._undoManager.off('stack-item-popped', this._onStackItemPopped)\n    this._undoManager.removeTrackedOrigin(this.syncConf)\n  }\n}\nexport const yUndoManager = cmView.ViewPlugin.fromClass(YUndoManagerPluginValue)\n\n/**\n * @type {cmState.StateCommand}\n */\nexport const undo = ({ state, dispatch }) =>\n  state.facet(yUndoManagerFacet).undo() || true\n\n/**\n * @type {cmState.StateCommand}\n */\nexport const redo = ({ state, dispatch }) =>\n  state.facet(yUndoManagerFacet).redo() || true\n\n/**\n * @param {cmState.EditorState} state\n * @return {number}\n */\nexport const undoDepth = state => state.facet(yUndoManagerFacet).undoManager.undoStack.length\n\n/**\n * @param {cmState.EditorState} state\n * @return {number}\n */\nexport const redoDepth = state => state.facet(yUndoManagerFacet).undoManager.redoStack.length\n\n/**\n * Default key bindigs for the undo manager.\n * @type {Array<cmView.KeyBinding>}\n */\nexport const yUndoManagerKeymap = [\n  { key: 'Mod-z', run: undo, preventDefault: true },\n  { key: 'Mod-y', mac: 'Mod-Shift-z', run: redo, preventDefault: true },\n  { key: 'Mod-Shift-z', run: redo, preventDefault: true }\n]\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}