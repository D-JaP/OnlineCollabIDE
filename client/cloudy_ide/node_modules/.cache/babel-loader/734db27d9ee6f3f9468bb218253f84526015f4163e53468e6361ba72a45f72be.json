{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dzung\\\\project\\\\cloudy\\\\client\\\\cloudy_ide\\\\src\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { css } from '@codemirror/lang-css';\nimport { html } from '@codemirror/lang-html';\nimport * as Y from 'yjs';\nimport { EditorState } from \"@codemirror/state\";\nimport { EditorView, keymap } from \"@codemirror/view\";\nimport { basicSetup } from 'codemirror';\nimport { githubLight } from '@ddietr/codemirror-themes/github-light';\nimport { githubDark } from '@ddietr/codemirror-themes/github-dark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor(_ref) {\n  _s();\n  let {\n    value,\n    theme,\n    lang,\n    onChange\n  } = _ref;\n  // setup code\n  var cm_lang;\n  var cm_theme;\n  if (lang == \"javascript\") {\n    cm_lang = javascript();\n  } else if (lang == \"html\") {\n    cm_lang = html();\n  } else if (lang == \"css\") {\n    cm_lang = css();\n  }\n  if (theme == 'light') {\n    cm_theme = githubLight;\n  } else if (theme == 'dark') {\n    cm_theme = githubDark;\n  }\n  const editorRef = useRef();\n  const view = useRef();\n\n  // \n  const parentElement = document.getElementById(\"editor-container\");\n  useEffect(() => {\n    view.current = new EditorView({\n      state: EditorState.create({\n        doc: value,\n        extensions: [basicSetup, cm_lang, cm_theme, EditorView.updateListener.of(_ref2 => {\n          let {\n            state\n          } = _ref2;\n          onChange({\n            target: {\n              value: state.doc.text\n            }\n          });\n        })]\n      }),\n      parent: editorRef.current\n    });\n    return () => {\n      view.current.destroy();\n      view.current = null;\n    };\n  }, []);\n  useEffect(() => {\n    if (view.current && view.current.state.doc.toString() !== value) {\n      view.current.dispatch({\n        changes: {\n          from: 0,\n          to: view.current.state.doc.length,\n          insert: \"\"\n        }\n      });\n    }\n    console.log(value);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    id: \"editor-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n}\n_s(CodeEditor, \"7Fp9nlrh4sMphATSCn/nBE6XSqU=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","javascript","css","html","Y","EditorState","EditorView","keymap","basicSetup","githubLight","githubDark","jsxDEV","_jsxDEV","CodeEditor","_ref","_s","value","theme","lang","onChange","cm_lang","cm_theme","editorRef","view","parentElement","document","getElementById","current","state","create","doc","extensions","updateListener","of","_ref2","target","text","parent","destroy","toString","dispatch","changes","from","to","length","insert","console","log","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dzung/project/cloudy/client/cloudy_ide/src/CodeEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport { javascript } from '@codemirror/lang-javascript';\r\nimport { css } from '@codemirror/lang-css'\r\nimport { html } from '@codemirror/lang-html'\r\nimport * as Y from 'yjs'\r\nimport {EditorState} from \"@codemirror/state\"\r\nimport {EditorView, keymap} from \"@codemirror/view\"\r\nimport { basicSetup } from 'codemirror';\r\nimport {githubLight} from '@ddietr/codemirror-themes/github-light'\r\nimport {githubDark} from '@ddietr/codemirror-themes/github-dark'\r\n\r\n\r\nfunction CodeEditor({value, theme, lang, onChange}) {\r\n    // setup code\r\n    var cm_lang ;\r\n    var cm_theme ;\r\n    if (lang == \"javascript\") {\r\n        cm_lang = javascript();\r\n    }\r\n    else if (lang  == \"html\") {\r\n        cm_lang = html();\r\n    }\r\n    else if (lang == \"css\") {\r\n        cm_lang = css();\r\n    }\r\n\r\n    if (theme == 'light'){\r\n        cm_theme = githubLight;\r\n    }\r\n    else if (theme == 'dark') {\r\n        cm_theme = githubDark;\r\n    }\r\n\r\n    const editorRef = useRef();\r\n    const view = useRef();\r\n\r\n    \r\n    // \r\n    const parentElement = document.getElementById(\"editor-container\");\r\n\r\n    useEffect(() => {\r\n        view.current = new EditorView({\r\n            state: EditorState.create({\r\n                doc: value,\r\n                extensions: [\r\n                    basicSetup,\r\n                    cm_lang,\r\n                    cm_theme,\r\n                    EditorView.updateListener.of(({ state }) => {\r\n                        onChange({ target: { value: state.doc.text } });\r\n                    })\r\n                ]\r\n            }),\r\n            parent: editorRef.current,\r\n        });\r\n        return () => {\r\n            view.current.destroy();\r\n            view.current = null;\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (view.current && view.current.state.doc.toString() !== value) {\r\n          view.current.dispatch({\r\n            changes: { from: 0, to: view.current.state.doc.length, insert: \"\" }\r\n          });\r\n        }\r\n        console.log(value)\r\n      }, [value]);\r\n\r\n    return <div ref={editorRef} id=\"editor-container\" />;\r\n\r\n}\r\n\r\nexport default CodeEditor"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,OAAO,KAAKC,CAAC,MAAM,KAAK;AACxB,SAAQC,WAAW,QAAO,mBAAmB;AAC7C,SAAQC,UAAU,EAAEC,MAAM,QAAO,kBAAkB;AACnD,SAASC,UAAU,QAAQ,YAAY;AACvC,SAAQC,WAAW,QAAO,wCAAwC;AAClE,SAAQC,UAAU,QAAO,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhE,SAASC,UAAUA,CAAAC,IAAA,EAAiC;EAAAC,EAAA;EAAA,IAAhC;IAACC,KAAK;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAL,IAAA;EAC9C;EACA,IAAIM,OAAO;EACX,IAAIC,QAAQ;EACZ,IAAIH,IAAI,IAAI,YAAY,EAAE;IACtBE,OAAO,GAAGnB,UAAU,EAAE;EAC1B,CAAC,MACI,IAAIiB,IAAI,IAAK,MAAM,EAAE;IACtBE,OAAO,GAAGjB,IAAI,EAAE;EACpB,CAAC,MACI,IAAIe,IAAI,IAAI,KAAK,EAAE;IACpBE,OAAO,GAAGlB,GAAG,EAAE;EACnB;EAEA,IAAIe,KAAK,IAAI,OAAO,EAAC;IACjBI,QAAQ,GAAGZ,WAAW;EAC1B,CAAC,MACI,IAAIQ,KAAK,IAAI,MAAM,EAAE;IACtBI,QAAQ,GAAGX,UAAU;EACzB;EAEA,MAAMY,SAAS,GAAGvB,MAAM,EAAE;EAC1B,MAAMwB,IAAI,GAAGxB,MAAM,EAAE;;EAGrB;EACA,MAAMyB,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;EAEjE1B,SAAS,CAAC,MAAM;IACZuB,IAAI,CAACI,OAAO,GAAG,IAAIrB,UAAU,CAAC;MAC1BsB,KAAK,EAAEvB,WAAW,CAACwB,MAAM,CAAC;QACtBC,GAAG,EAAEd,KAAK;QACVe,UAAU,EAAE,CACRvB,UAAU,EACVY,OAAO,EACPC,QAAQ,EACRf,UAAU,CAAC0B,cAAc,CAACC,EAAE,CAACC,KAAA,IAAe;UAAA,IAAd;YAAEN;UAAM,CAAC,GAAAM,KAAA;UACnCf,QAAQ,CAAC;YAAEgB,MAAM,EAAE;cAAEnB,KAAK,EAAEY,KAAK,CAACE,GAAG,CAACM;YAAK;UAAE,CAAC,CAAC;QACnD,CAAC,CAAC;MAEV,CAAC,CAAC;MACFC,MAAM,EAAEf,SAAS,CAACK;IACtB,CAAC,CAAC;IACF,OAAO,MAAM;MACTJ,IAAI,CAACI,OAAO,CAACW,OAAO,EAAE;MACtBf,IAAI,CAACI,OAAO,GAAG,IAAI;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACZ,IAAIuB,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACI,OAAO,CAACC,KAAK,CAACE,GAAG,CAACS,QAAQ,EAAE,KAAKvB,KAAK,EAAE;MAC/DO,IAAI,CAACI,OAAO,CAACa,QAAQ,CAAC;QACpBC,OAAO,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,EAAE,EAAEpB,IAAI,CAACI,OAAO,CAACC,KAAK,CAACE,GAAG,CAACc,MAAM;UAAEC,MAAM,EAAE;QAAG;MACpE,CAAC,CAAC;IACJ;IACAC,OAAO,CAACC,GAAG,CAAC/B,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEb,oBAAOJ,OAAA;IAAKoC,GAAG,EAAE1B,SAAU;IAAC2B,EAAE,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAExD;AAACtC,EAAA,CA5DQF,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AA8DnB,eAAeA,UAAU;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}