{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dzung\\\\project\\\\cloudy\\\\client\\\\cloudy_ide\\\\src\\\\CodeEditor.jsx\";\nimport React, { useRef, useEffect } from 'react';\nimport { javascript } from '@codemirror/lang-javascript';\nimport * as CodeMirror from 'codemirror';\n// import 'codemirror/lib/codemirror.css';\n// import 'codemirror/theme/material.css';\nimport * as Y from 'yjs';\nimport { EditorState } from \"@codemirror/state\";\nimport { EditorView, keymap } from \"@codemirror/view\";\nimport { defaultKeymap } from \"@codemirror/commands\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor(props) {\n  let startState = EditorState.create({\n    doc: \"Hello World\",\n    extensions: [keymap.of(defaultKeymap)]\n  });\n  let view = new EditorView({\n    state: startState\n    // parent: document.getElementById(\"root\")\n  });\n\n  // useEffect(() => {\n  //     if (editorRef.current) {\n  //       const editor = CodeMirror(editorRef.current, {\n  //         value: 'function hello() {\\n  console.log(\"Hello, world!\");\\n}',\n  //         mode: 'javascript',\n  //         theme: 'material',\n  //         lineNumbers: true,\n  //       });\n\n  //       editor.on('change', props.onChange)\n  //     }\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-editor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","javascript","CodeMirror","Y","EditorState","EditorView","keymap","defaultKeymap","jsxDEV","_jsxDEV","CodeEditor","props","startState","create","doc","extensions","of","view","state","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dzung/project/cloudy/client/cloudy_ide/src/CodeEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport { javascript } from '@codemirror/lang-javascript';\r\nimport * as CodeMirror from 'codemirror';\r\n// import 'codemirror/lib/codemirror.css';\r\n// import 'codemirror/theme/material.css';\r\nimport * as Y from 'yjs'\r\nimport {EditorState} from \"@codemirror/state\"\r\nimport {EditorView, keymap} from \"@codemirror/view\"\r\nimport {defaultKeymap} from \"@codemirror/commands\"\r\n\r\nfunction CodeEditor(props) {\r\n\r\n    let startState = EditorState.create({\r\n        doc: \"Hello World\",\r\n        extensions: [keymap.of(defaultKeymap)]\r\n    })\r\n\r\n    let view = new EditorView({\r\n        state: startState,\r\n        // parent: document.getElementById(\"root\")\r\n    })\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (editorRef.current) {\r\n    //       const editor = CodeMirror(editorRef.current, {\r\n    //         value: 'function hello() {\\n  console.log(\"Hello, world!\");\\n}',\r\n    //         mode: 'javascript',\r\n    //         theme: 'material',\r\n    //         lineNumbers: true,\r\n    //       });\r\n      \r\n    //       editor.on('change', props.onChange)\r\n    //     }\r\n    //   }, []);\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"code-editor\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default CodeEditor"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAO,KAAKC,UAAU,MAAM,YAAY;AACxC;AACA;AACA,OAAO,KAAKC,CAAC,MAAM,KAAK;AACxB,SAAQC,WAAW,QAAO,mBAAmB;AAC7C,SAAQC,UAAU,EAAEC,MAAM,QAAO,kBAAkB;AACnD,SAAQC,aAAa,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAACC,KAAK,EAAE;EAEvB,IAAIC,UAAU,GAAGR,WAAW,CAACS,MAAM,CAAC;IAChCC,GAAG,EAAE,aAAa;IAClBC,UAAU,EAAE,CAACT,MAAM,CAACU,EAAE,CAACT,aAAa,CAAC;EACzC,CAAC,CAAC;EAEF,IAAIU,IAAI,GAAG,IAAIZ,UAAU,CAAC;IACtBa,KAAK,EAAEN;IACP;EACJ,CAAC,CAAC;;EAIF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAIA,oBACIH,OAAA;IAAKU,SAAS,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAEV;AAACC,EAAA,GAjCQd,UAAU;AAmCnB,eAAeA,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}