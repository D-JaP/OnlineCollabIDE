{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dzung\\\\project\\\\cloudy\\\\client\\\\cloudy_ide\\\\src\\\\Editor.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Editor(props) {\n  _s();\n  const {\n    id: documentId\n  } = useParams();\n  const [codedata, setCodeData] = useState({\n    id: null,\n    code: ''\n  });\n  const socket = props.socket;\n  const SAVE_INTERVAL_MS = 2000;\n  const [loaded, setLoaded] = useState(false);\n  // load data\n  useEffect(() => {\n    if (socket == null | codedata == null) return;\n    socket.once(\"load-code-\" + props.lan, codedata => {\n      // setCode(code)\n      setLoaded(true);\n    });\n    console.log(codedata, \"   \", socket.id);\n\n    // only emit when u are the modifying\n    if (codedata.id == socket.id) {\n      socket.emit(\"get-code-\" + props.lan, documentId);\n      console.log(\"client emit \");\n    }\n    return () => {};\n  }, [socket, codedata, documentId]);\n\n  // receiver\n  useEffect(() => {\n    if (socket == null | codedata == null) return;\n    const handler = data => {\n      setCodeData(data);\n      props.onChange(data.code);\n      console.log(data);\n    };\n    socket.on(\"receive-changes-\" + props.lan, handler);\n    return () => {\n      socket.off(\"receive-changes-\" + props.lan);\n    };\n  }, [socket, codedata]);\n\n  // save code\n  useEffect(() => {\n    if (socket == null | codedata == null) return;\n    const interval = setInterval(() => {\n      socket.emit('save-code', codedata);\n    }, SAVE_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, codedata]);\n  const onChange = React.useCallback(event => {\n    const data = {\n      id: socket.id,\n      code: event.target.value\n    };\n    setCodeData(data);\n    props.onChange(event.target.value);\n    socket.emit(\"send-changes-\" + props.lan, data);\n    console.log(\"send change \" + props.lan);\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.lan,\n    onChange: onChange,\n    value: codedata.code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"cZXXkf4qOXr0cF3+NzFQuCTWh7A=\", false, function () {\n  return [useParams];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Editor","props","_s","id","documentId","codedata","setCodeData","code","socket","SAVE_INTERVAL_MS","loaded","setLoaded","once","lan","console","log","emit","handler","data","onChange","on","off","interval","setInterval","clearInterval","useCallback","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dzung/project/cloudy/client/cloudy_ide/src/Editor.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nfunction Editor(props) {\r\n  const { id: documentId } = useParams();\r\n  const [codedata, setCodeData] = useState({id: null, code: ''});\r\n\r\n  const socket = props.socket;\r\n  const SAVE_INTERVAL_MS = 2000;\r\n  const [loaded, setLoaded] = useState(false)\r\n  // load data\r\n  useEffect(() => {\r\n    if (socket == null | codedata == null) return\r\n\r\n    socket.once(\"load-code-\" + props.lan, codedata => {\r\n      // setCode(code)\r\n      setLoaded(true)\r\n    })\r\n\r\n    console.log(codedata ,\"   \", socket.id)\r\n\r\n    // only emit when u are the modifying\r\n    if (codedata.id == socket.id){\r\n      socket.emit(\"get-code-\" + props.lan, documentId)\r\n      console.log(\"client emit \")\r\n    }\r\n    return () => {\r\n    }\r\n  }, [socket, codedata, documentId])\r\n\r\n\r\n  // receiver\r\n  useEffect(() => {\r\n    if (socket == null | codedata == null) return\r\n    const handler = (data) => {\r\n      setCodeData(data);\r\n      props.onChange(data.code);\r\n\r\n      console.log(data)\r\n    }\r\n    \r\n    socket.on(\"receive-changes-\" + props.lan, handler);\r\n\r\n    return () => {\r\n      socket.off(\"receive-changes-\" + props.lan);\r\n    }\r\n  }, [socket, codedata])\r\n\r\n  // save code\r\n  useEffect(() => {\r\n    if (socket == null | codedata == null) return\r\n\r\n    const interval = setInterval(() => {\r\n      socket.emit('save-code', codedata)\r\n    }, SAVE_INTERVAL_MS)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [socket, codedata])\r\n\r\n\r\n\r\n  const onChange = React.useCallback((event) => {\r\n    const data = {\r\n      id: socket.id,\r\n      code: event.target.value\r\n    }\r\n    setCodeData(data);\r\n    props.onChange(event.target.value);\r\n    socket.emit(\"send-changes-\" + props.lan, data);\r\n    console.log(\"send change \" + props.lan)\r\n  }, [socket]);\r\n\r\n  return (\r\n    <textarea id={props.lan} onChange={onChange} value={codedata.code}></textarea>\r\n  )\r\n}\r\n\r\nexport default Editor"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}