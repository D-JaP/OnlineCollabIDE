{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dzung\\\\project\\\\cloudy\\\\client\\\\cloudy_ide\\\\src\\\\Editor.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Editor(props) {\n  _s();\n  const {\n    id: documentId\n  } = useParams();\n  const [codedata, setCodeData] = useState({\n    _id: null,\n    client_id: null,\n    code: ''\n  });\n  const SAVE_INTERVAL_MS = 2000;\n  const [loaded, setLoaded] = useState(false);\n  const initQueue = [{\n    _id: null,\n    client_id: null,\n    code: null\n  }, {\n    _id: null,\n    client_id: null,\n    code: null\n  }];\n  const reducerQueue = (state, action) => {\n    switch (action.type) {\n      case 'enqueue':\n        state.push(action.payload);\n        state.shift();\n        return state;\n    }\n    throw \"unknown condition\";\n  };\n  const [currentSaveData, setCurrentSaveData] = useReducer(reducerQueue, initQueue);\n  const socket = props.socket;\n\n  // load data\n  useEffect(() => {\n    if (socket == null || codedata == null || documentId == null) return;\n    if (!loaded) {\n      socket.once(\"load-code-\" + props.lan, loaded_data => {\n        console.log(\"loading...\");\n        if (loaded_data.length == 0) return;\n        console.log(\"load-code-\" + props.lan, loaded_data);\n        setLoaded(true);\n        setCodeData(loaded_data);\n        props.onChange(loaded_data.code);\n        // console.log(data.code);\n      });\n    }\n\n    // only emit when u are the modifying\n    if (codedata.client_id == socket.id) {\n      socket.emit(\"get-code-\" + props.lan, documentId);\n      console.log(\"get-code\");\n    }\n    return () => {};\n  }, [socket, codedata, documentId]);\n\n  // receiver\n  useEffect(() => {\n    if (socket == null | codedata == null) return;\n    const handler = data => {\n      setCodeData(data);\n      props.onChange(data.code);\n      console.log(data);\n    };\n    socket.on(\"receive-changes-\" + props.lan, handler);\n    return () => {\n      socket.off(\"receive-changes-\" + props.lan);\n    };\n  }, [socket, codedata]);\n  const onChange = React.useCallback(event => {\n    const data = {\n      _id: documentId,\n      client_id: socket.id,\n      code: event.target.value\n    };\n    setCodeData(data);\n    props.onChange(event.target.value);\n    socket.emit(\"send-changes-\" + props.lan, data);\n    setCurrentSaveData({\n      type: \"enqueue\",\n      payload: data\n    });\n  }, [socket]);\n\n  // only emit saving code if this client is modifying\n  useEffect(() => {\n    if (currentSaveData[1].code == null | socket == null | codedata.code == null) return;\n    if (currentSaveData[1].client_id != socket.id) return;\n    const interval = setInterval(() => {\n      if (currentSaveData[1] == currentSaveData[0]) {\n        clearInterval(interval);\n        return;\n      }\n      socket.emit('save-code-' + props.lan, currentSaveData[1]);\n      setCurrentSaveData({\n        type: \"enqueue\",\n        payload: currentSaveData[1]\n      });\n      console.log('save-code-' + props.lan, currentSaveData);\n    }, SAVE_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, currentSaveData, codedata]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.lan,\n    onChange: onChange,\n    value: codedata.code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"DfCcpugQB46Yu+PyYCwQUW0oidc=\", false, function () {\n  return [useParams];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","useParams","jsxDEV","_jsxDEV","Editor","props","_s","id","documentId","codedata","setCodeData","_id","client_id","code","SAVE_INTERVAL_MS","loaded","setLoaded","initQueue","reducerQueue","state","action","type","push","payload","shift","currentSaveData","setCurrentSaveData","socket","once","lan","loaded_data","console","log","length","onChange","emit","handler","data","on","off","useCallback","event","target","value","interval","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dzung/project/cloudy/client/cloudy_ide/src/Editor.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState, useReducer } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Editor(props) {\r\n  const { id: documentId } = useParams();\r\n  const [codedata, setCodeData] = useState({_id:null,client_id: null, code: ''});\r\n  const SAVE_INTERVAL_MS =2000;\r\n  const [loaded, setLoaded] = useState(false)\r\n  const initQueue =[{_id: null, client_id:null, code: null},{_id: null, client_id:null, code: null}]\r\n  const reducerQueue = (state,action) => {\r\n    switch (action.type){\r\n      case 'enqueue':\r\n        state.push(action.payload)\r\n        state.shift()\r\n        return state\r\n    }\r\n    throw \"unknown condition\"\r\n  }\r\n  const [currentSaveData, setCurrentSaveData] = useReducer(reducerQueue, initQueue)\r\n\r\n\r\n  const socket = props.socket;\r\n\r\n  // load data\r\n  useEffect(() => {\r\n    if (socket == null || codedata == null ||documentId==null) return\r\n    if (!loaded){\r\n      socket.once(\"load-code-\" + props.lan, loaded_data => {\r\n        console.log(\"loading...\");\r\n        if (loaded_data.length == 0 ) return\r\n        console.log(\"load-code-\"+props.lan,loaded_data);\r\n        setLoaded(true)\r\n        setCodeData(loaded_data)\r\n        props.onChange(loaded_data.code);\r\n        // console.log(data.code);\r\n      })\r\n\r\n    }\r\n  \r\n    // only emit when u are the modifying\r\n    if (codedata.client_id == socket.id){\r\n      socket.emit(\"get-code-\" + props.lan, documentId)\r\n      console.log(\"get-code\");\r\n    }\r\n    return () => {\r\n\r\n    }\r\n  }, [socket,codedata, documentId])\r\n\r\n\r\n  // receiver\r\n  useEffect(() => {\r\n    if (socket == null | codedata == null) return\r\n    const handler = (data) => {\r\n      setCodeData(data);\r\n      props.onChange(data.code);\r\n\r\n      console.log(data)\r\n    }\r\n    \r\n    socket.on(\"receive-changes-\" + props.lan, handler);\r\n\r\n    return () => {\r\n      socket.off(\"receive-changes-\" + props.lan);\r\n    }\r\n  }, [socket, codedata])\r\n\r\n\r\n  const onChange = React.useCallback((event) => {\r\n    const data = {\r\n      _id: documentId,\r\n      client_id: socket.id,\r\n      code: event.target.value\r\n    }\r\n    setCodeData(data);\r\n    props.onChange(event.target.value);\r\n    socket.emit(\"send-changes-\" + props.lan, data);\r\n    setCurrentSaveData({type: \"enqueue\", payload: data})\r\n\r\n  }, [socket]);\r\n\r\n  // only emit saving code if this client is modifying\r\n  useEffect(() => {\r\n\r\n    if( currentSaveData[1].code == null | socket ==null | codedata.code==null) return \r\n    if( currentSaveData[1].client_id != socket.id) return\r\n    \r\n    const interval = setInterval(() => {\r\n      if (currentSaveData[1] == currentSaveData[0]) {\r\n        clearInterval(interval)\r\n        return\r\n      }\r\n      socket.emit('save-code-'+props.lan, currentSaveData[1])\r\n      setCurrentSaveData({type: \"enqueue\", payload: currentSaveData[1]})\r\n      console.log('save-code-'+props.lan, currentSaveData)\r\n    }, SAVE_INTERVAL_MS)\r\n    \r\n    return () =>{\r\n      clearInterval(interval)\r\n    }\r\n  }, [socket,currentSaveData,codedata])\r\n  \r\n\r\n  return (\r\n    <textarea id={props.lan} onChange={onChange} value={codedata.code}></textarea>\r\n  )\r\n}\r\n\r\nexport default Editor"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}